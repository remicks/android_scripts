#!/bin/bash
# Initial setup
if [ ! "$INIT" ]; then
	export PATH="/usr/local/bin:/usr/bin:/bin:/usr/games"
fi

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "buildauto")
	../headerfile
	exit 0
fi

export AUTO=true
export REPO_PLATFORM=$(echo "ics") # HARDCODED, PLEASE FIX ASAP YOU DUMMEH!

# ::::::::::::::::::::::::::::::::::::::::::::::

# Check to see if auto builder can run
if ( ! cat $LOCAL/config/scriptrepo &> /dev/null ) \
&& ( ! cat $LOCAL/config/scriptdevice &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/scriptrepo)" == "" ] \
&& [ "$(cat $LOCAL/config/scriptdevice)" == "" ] \
|| ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
&& ( ! cat $LOCAL/config/otherdeviceauto &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/otherrepoauto)" == "" ] \
&& [ "$(cat $LOCAL/config/otherdeviceauto)" == "" ]; then
	echo "Both Auto Builder's repository and device is not set!"
	echo "Please use the Auto Builder config menu"
	read -p "Press Enter to continue: " done
	exit 0
elif ( ! cat $LOCAL/config/scriptrepo &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/scriptrepo)" == "" ] \
|| ( ! cat $LOCAL/config/otherrepoauto &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/otherrepoauto)" == "" ]; then
	echo "Auto Builder's repository is not set!"
	echo "Please use the Auto Builder config menu"
	read -p "Press Enter to continue: " done
	exit 0
elif ( ! cat $LOCAL/config/scriptdevice &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/scriptdevice)" == "" ] \
|| ( ! cat $LOCAL/config/otherdeviceauto &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/otherdeviceauto)" == "" ]; then
	echo "Auto Builder's device is not set!"
	echo "Please use the Auto Builder config menu"
	read -p "Press Enter to continue: " done
	exit 0
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Buildoutput folder init
if ( ! cat $LOCAL/config/outfile &> /dev/null ) \
|| [ $(cat $LOCAL/config/outfile | head -n 1) == "" ]; then
	outfile=$(echo $LOCAL/..)
else
	outfile=$(cat $LOCAL/config/outfile | head -n 1)
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Repo setup
if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
	echo "EOF" >> $LOCAL/config/scriptrepo
else
	echo "EOF" >> $LOCAL/config/otherrepoauto
fi

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocount=$repocount+1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
	|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
		scriptrepo[$repocount]=$( cat $LOCAL/config/scriptrepo | sed -n "$repocount"p )
	else
		scriptrepo[$repocount]=$( cat $LOCAL/config/otherrepoauto | sed -n "$repocount"p )
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if [ "${scriptrepo[$repocount]}" == "EOF" ]; then
		break
	fi
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
	sed -i "/EOF/d" $LOCAL/config/scriptrepo
else
	sed -i "/EOF/d" $LOCAL/config/otherrepoauto
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Device setup
if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
	echo "EOF" >> $LOCAL/config/scriptdevice
else
	echo "EOF" >> $LOCAL/config/otherdeviceauto
fi

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let devicecount=$devicecount+1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
	|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
		scriptdevice[$devicecount]=$( cat $LOCAL/config/scriptdevice | sed -n "$devicecount"p )
	else
		scriptdevice[$repocount]=$( cat $LOCAL/config/otherdeviceauto | sed -n "$devicecount"p )
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if [ "${scriptdevice[$devicecount]}" == "EOF" ]; then
		break
	fi
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
	sed -i "/EOF/d" $LOCAL/config/scriptdevice
else
	sed -i "/EOF/d" $LOCAL/config/otherdeviceauto
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

# Sync repos
INIT=""
reposync kitchen > $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
repocountdown=""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocountdown=$repocountdown+1

	if ( echo "${scriptrepo[$repocountdown]}" | grep -q "EOF" ); then
		break
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
	|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
		export SCRIPT_REPO="${scriptrepo[$repocountdown]}"
		INIT=""
		reposync $SCRIPT_REPO >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
	else
		cd "${scriptrepo[$repocountdown]}"
		repo sync >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ::::::::::::::::::::::::::::::::::::::::::::::

# Setup build
setupandro >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1

# ::::::::::::::::::::::::::::::::::::::::::::::

# Build Device
repocountdown=""
devicecountdown=""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocountdown=$repocountdown+1

	if ( echo "${scriptrepo[$repocountdown]}" | grep -q "EOF" ); then
		break
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	if ( ! cat $LOCAL/config/otherrepoauto &> /dev/null ) \
	|| [ $(cat $LOCAL/config/otherrepoauto | head -n 1) == "" ]; then
		export SCRIPT_REPO="${scriptrepo[$repocountdown]}"
	else
		export OTHER_REPO_FOLDER=$(echo "${scriptrepo[$repocountdown]}")
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	while true; do
		let devicecountdown=$devicecountdown+1

		if ( echo "${scriptdevice[$devicecountdown]}" | grep -q "EOF" ); then
			break
		fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		export SCRIPT_DEVICE="${scriptdevice[$devicecountdown]}"
		buildandro >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
		setupprop >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		# Publish Build ( if possible )
		if ( find $BUILDS/../publish &> /dev/null); then
			publishandro &
		fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ::::::::::::::::::::::::::::::::::::::::::::::

# Put computer to sleep ( if setup to do so )
if ( find $LOCAL/config/sleepybuildserver &> /dev/null ); then
	echo "" >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
	echo "Waiting for ten minutes! this is not a countdown.." >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
	sleep 10m
	echo "Sleep..." >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1

	sleeptime=$( cat $LOCAL/config/sleepybuildserver | sed -n 1p )
	passy=$( cat $LOCAL/config/sleepybuildserver | sed -n 2p )

	echo $passy | sudo -S rtcwake -n -l -m mem -s $sleeptime > $outfile/sleeptime-$(date +%Y%m%d).txt 2>&1
	sleep 30
	echo $passy | sudo -S rtcwake -l -m mem -s $sleeptime >> $outfile/sleeptime-$(date +%Y%m%d).txt 2>&1
fi
