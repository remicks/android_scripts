#!/bin/bash
if [ ! "$INIT" ]; then
	export PATH="/usr/local/bin:/usr/bin:/bin:/usr/games"
fi

if [ ! "$INIT" ]; then
	cd $(dirname $0)
	export SCRIPT=$(echo "buildauto")
	../headerfile
	exit 0
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

if ( ! cat $LOCAL/config/scriptrepo &> /dev/null ) \
&& ( ! cat $LOCAL/config/scriptdevice &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/scriptrepo)" == "" ] \
&& [ "$(cat $LOCAL/config/scriptdevice)" == "" ]; then
	echo "Both Auto Builder's repository and device is not set!"
	echo "Please use the Auto Builder config menu"
	read -p "Press Enter to continue: " done
	exit 0
elif ( ! cat $LOCAL/config/scriptrepo &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/scriptrepo)" == "" ]; then
	echo "Auto Builder's repository is not set!"
	echo "Please use the Auto Builder config menu"
	read -p "Press Enter to continue: " done
	exit 0
elif ( ! cat $LOCAL/config/scriptdevice &> /dev/null  ) \
|| [ "$(cat $LOCAL/config/scriptdevice)" == "" ]; then
	echo "Auto Builder's device is not set!"
	echo "Please use the Auto Builder config menu"
	read -p "Press Enter to continue: " done
	exit 0
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

export AUTO=true

if ( ! cat $LOCAL/config/outfile &> /dev/null ) \
|| [ $(cat $LOCAL/config/outfile | head -n 1) == "" ]; then
	outfile=$(echo $LOCAL/..)
else
	outfile=$(cat $LOCAL/config/outfile | head -n 1)
fi

if ( ! find $outfile/buildoutput-$(date +%Y%m%d).txt &> /dev/null ); then
	touch $outfile/buildoutput-$(date +%Y%m%d).txt
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

echo "EOF" >> $LOCAL/config/scriptrepo

while true; do
	let repocount=$repocount+1
	scriptrepo[$repocount]=$( cat $LOCAL/config/scriptrepo | sed -n "$repocount"p )

	if [ "${scriptrepo[$repocount]}" == "EOF" ]; then
		break
	fi
done

sed -i "/EOF/d" $LOCAL/config/scriptrepo

# ::::::::::::::::::::::::::::::::::::::::::::::

echo "EOF" >> $LOCAL/config/scriptdevice

while true; do
	let devicecount=$devicecount+1
	scriptdevice[$devicecount]=$( cat $LOCAL/config/scriptdevice | sed -n "$devicecount"p )

	if [ "${scriptdevice[$devicecount]}" == "EOF" ]; then
		break
	fi
done

sed -i "/EOF/d" $LOCAL/config/scriptdevice

# ::::::::::::::::::::::::::::::::::::::::::::::

reposync kitchen > $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1

repocountdown=""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocountdown=$repocountdown+1

	if ( echo "${scriptrepo[$repocountdown]}" | grep -q "EOF" ); then
		break
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	export SCRIPT_REPO="${scriptrepo[$repocountdown]}"
	reposync $SCRIPT_REPO >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

setupandro >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1

repocountdown=""
devicecountdown=""

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
while true; do
	let repocountdown=$repocountdown+1

	if ( echo "${scriptrepo[$repocountdown]}" | grep -q "EOF" ); then
		break
	fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	export SCRIPT_REPO="${scriptrepo[$repocountdown]}"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	while true; do
		let devicecountdown=$devicecountdown+1

		if ( echo "${scriptdevice[$devicecountdown]}" | grep -q "EOF" ); then
			break
		fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		export SCRIPT_DEVICE="${scriptdevice[$devicecountdown]}"
		buildandro >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
		setupprop >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# ::::::::::::::::::::::::::::::::::::::::::::::

if ( find $BUILDS/../publish &> /dev/null); then

	repocountdown=""
	devicecountdown=""
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	while true; do
		let repocountdown=$repocountdown+1
		if ( echo "${scriptrepo[$repocountdown]}" | grep -q "EOF" ); then
			break
		fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		export SCRIPT_REPO="${scriptrepo[$repocountdown]}"
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		while true; do
			let devicecountdown=$devicecountdown+1
			if ( echo "${scriptdevice[$devicecountdown]}" | grep -q "EOF" ); then
				break
			fi
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
			export SCRIPT_DEVICE="${scriptdevice[$devicecountdown]}"
			publishandro >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	done
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
fi

# ::::::::::::::::::::::::::::::::::::::::::::::

if ( find $LOCAL/config/sleepybuildserver ); then
	echo "" >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
	echo "Waiting for ten minutes! this is not a countdown.." >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1
	sleep 10m
	echo "Sleep..." >> $outfile/buildoutput-$(date +%Y%m%d).txt 2>&1

	sleeptime=$( cat $LOCAL/config/sleepybuildserver | sed -n 1p )
	passy=$( cat $LOCAL/config/sleepybuildserver | sed -n 2p )

	echo $passy | sudo -S rtcwake -n -l -m mem -s 46800 > $sleeptime/sleeptime.txt 2>&1
	sleep 30
	echo $passy | sudo -S rtcwake -l -m mem -s 46800 >> $sleeptime/sleeptime.txt 2>&1
fi
